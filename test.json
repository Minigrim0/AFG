{"turn_90": Function { name: "turn_90", parameters: [], content: [ASTBlockNode { node_type: Assignment, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "initial_rotation", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Operation, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "$Rotation", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "100", value: 0, arglist: [], descendents: (None, None, []) } }), []) } }), []) }, ASTBlockNode { node_type: Assignment, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "current_rot", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Operation, name: "", value: 1, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "$Rotation", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "initial_rotation", value: 0, arglist: [], descendents: (None, None, []) } }), []) } }), []) }, ASTBlockNode { node_type: WhileLoop, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Operation, name: "", value: 4, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "current_rot", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "90", value: 0, arglist: [], descendents: (None, None, []) } }), []) } }), None, [ASTBlockNode { node_type: Assignment, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "current_rot", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Operation, name: "", value: 1, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "$Rotation", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "initial_rotation", value: 0, arglist: [], descendents: (None, None, []) } }), []) } }), []) }]) }, ASTBlockNode { node_type: Return, name: "", value: 0, arglist: [], descendents: (None, None, []) }] }, "main": Function { name: "main", parameters: [], content: [ASTBlockNode { node_type: Assignment, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "$VelocityY", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "500", value: 0, arglist: [], descendents: (None, None, []) } }), []) }, ASTBlockNode { node_type: Loop, name: "", value: 0, arglist: [], descendents: (None, None, [ASTBlockNode { node_type: IfCondition, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Operation, name: "", value: 5, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "$Rays[3].type", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "0", value: 0, arglist: [], descendents: (None, None, []) } }), []) } }), None, [ASTBlockNode { node_type: IfCondition, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Operation, name: "", value: 4, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "$Rays[3].dist", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "1000", value: 0, arglist: [], descendents: (None, None, []) } }), []) } }), None, [ASTBlockNode { node_type: Assignment, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "$VelocityY", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "0", value: 0, arglist: [], descendents: (None, None, []) } }), []) }, ASTBlockNode { node_type: FunctionCall, name: "turn_90", value: 0, arglist: [], descendents: (None, None, []) }, ASTBlockNode { node_type: Assignment, name: "", value: 0, arglist: [], descendents: (Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "$VelocityY", value: 0, arglist: [], descendents: (None, None, []) } }), Some(RefCell { value: ASTBlockNode { node_type: Identifier, name: "500", value: 0, arglist: [], descendents: (None, None, []) } }), []) }]) }]) }]) }] }}